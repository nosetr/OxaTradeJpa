<!-- @see https://www.baeldung.com/logback -->
<configuration>
	<!--Variable Substitution
    <property name="LOG_DIR" value="/var/log/OxaTrade" />-->
    <property name="LOG_DIR" value="../logs" /> <!-- Here, the parent directory and the "logs" subfolder are used -->
    
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- Console -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    
	<!--With this configuration, when the log file exceeds 1 MB in size,
	Logback will roll over the log file and start writing to a new log file,
	while compressing the old log file:-->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- File -->
	    <file>${LOG_DIR}/oxatrade_back_auth.log</file>
	    <append>true</append>
	    <!--We specify a maximum of 3 archived log files (<maxIndex>3</maxIndex>),
	    and the archived files will have names like oxatrade_back_auth.1.log.zip,
	    oxatrade_back_auth.2.log.zip, etc.-->
	    <rollingPolicy class="ch.qos.logback.core.rolling.SizeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/oxatrade_back_auth.%i.log.zip</fileNamePattern>
            <minIndex>1</minIndex>
            <maxHistory>3</maxHistory>
        </rollingPolicy>
        <!--Is used to trigger rollover based on the file size.
        We set the maximum file size to 1MB:-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1MB</maxFileSize>
        </triggeringPolicy>
	    <encoder>
	        <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
	    </encoder>
	</appender>

    <!-- Root logger.
    The log levels higher than INFO are: WARN, ERROR, FATAL -->
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
</configuration>
